{"ast":null,"code":"import _defineProperty from \"/home/renandev/Documentos/alarsys/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/renandev/Documentos/alarsys/frontend/src/components/user/Management.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Main from '../template/Main';\nconst baseUrl = 'http://localhost:3001/AlarmesAtuados'; // Estado inicial\n\nconst initialState = {\n  alarm: {\n    dataEntrada: '',\n    dataSaida: '',\n    descAlarm: '',\n    descEquipamento: '',\n    id: ''\n  },\n  list: []\n};\nconst headerProps = {\n  icon: 'users',\n  title: 'Usuários',\n  subtitle: 'Cadastro de usuários: Incluir, Listar,Alterar e Excluir'\n};\nexport default class UserCrud extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = _objectSpread({}, initialState);\n  }\n\n  componentWillMount() {\n    axios(baseUrl).then(resp => {\n      this.setState({\n        list: resp.data\n      });\n    });\n  }\n\n  clear() {\n    this.setState({\n      alarm: initialState.alarm\n    });\n  }\n\n  save() {\n    const alarm = this.state.alarm;\n    const method = alarm.id ? 'put' : 'post';\n    const url = alarm.id ? \"\".concat(baseUrl, \"/\").concat(alarm.id) : baseUrl;\n    axios[method](url, alarm).then(resp => {\n      const list = this.getUpdateList(resp.data);\n      this.setState({\n        alarm: initialState.alarm,\n        list\n      });\n    });\n  }\n\n  getUpdateList(alarm, add = true) {\n    const list = this.state.list.filter(u => u.id !== alarm.id);\n    if (add) list.unshift(alarm);\n    return list;\n  }\n\n  updateField(event) {\n    const alarm = _objectSpread({}, this.state.alarm);\n\n    alarm[event.target.name] = event.target.value;\n    this.setState({\n      alarm\n    });\n  }\n\n  load(alarm) {\n    this.setState({\n      alarm\n    });\n  }\n\n  remove(alarm) {\n    axios.delete(\"\".concat(baseUrl, \"/\").concat(alarm.id)).then(resp => {\n      const list = this.getUpdateList(alarm, false);\n      this.setState({\n        list\n      });\n    });\n  }\n\n  renderTable() {\n    return React.createElement(\"table\", {\n      className: \"table mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Id do Alarme\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Urgente\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"A\\xE7\\xF5es\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.renderRows()));\n  }\n\n  renderRows() {\n    return this.state.list.map(alarm => {\n      return React.createElement(\"tr\", {\n        key: alarm.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, alarm.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, alarm.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, alarm.email), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-warning\",\n        onClick: () => this.load(alarm),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-pencil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn btn-danger ml-2\",\n        onClick: () => this.remove(alarm),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }))));\n    });\n  }\n\n  render() {\n    return React.createElement(Main, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"display-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Gerencimaneto de alarmes\"), this.renderTable());\n  }\n\n}\n;","map":{"version":3,"sources":["/home/renandev/Documentos/alarsys/frontend/src/components/user/Management.jsx"],"names":["React","Component","axios","Main","baseUrl","initialState","alarm","dataEntrada","dataSaida","descAlarm","descEquipamento","id","list","headerProps","icon","title","subtitle","UserCrud","state","componentWillMount","then","resp","setState","data","clear","save","method","url","getUpdateList","add","filter","u","unshift","updateField","event","target","name","value","load","remove","delete","renderTable","renderRows","map","email","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport Main from '../template/Main'\n\nconst baseUrl = 'http://localhost:3001/AlarmesAtuados'\n// Estado inicial\nconst initialState = {\n    alarm: { dataEntrada: '' , dataSaida: '' , descAlarm: '' , descEquipamento: '' , id: '' },\n    list: []\n};\n\nconst headerProps = {\n    icon: 'users',\n    title: 'Usuários',\n    subtitle: 'Cadastro de usuários: Incluir, Listar,Alterar e Excluir'\n};\n\nexport default class UserCrud extends Component {\n\n    state = {...initialState}\n\n    componentWillMount(){\n        axios(baseUrl).then(resp => {\n            this.setState({ list: resp.data})\n        })\n    }\n\n    clear() {\n        this.setState({ alarm: initialState.alarm })\n    }\n\n    save() {\n        const alarm = this.state.alarm\n        const method = alarm.id ? 'put' : 'post'\n        const url = alarm.id ? `${baseUrl}/${alarm.id}` : baseUrl\n        axios[method](url,alarm)\n            .then(resp => {\n                const list = this.getUpdateList(resp.data)\n                this.setState({ alarm: initialState.alarm, list})\n            })\n    }\n\n    getUpdateList(alarm, add = true) {\n        const list = this.state.list.filter(u => u.id !== alarm.id)\n        if(add) list.unshift(alarm)\n        return list\n    }\n\n    updateField(event) {\n        const alarm = {...this.state.alarm }\n        alarm[event.target.name] = event.target.value\n        this.setState ({ alarm })\n    }\n\n    load(alarm) {\n        this.setState({ alarm })\n    };\n\n    remove(alarm) {\n        axios.delete(`${baseUrl}/${alarm.id}`).then(resp => {\n            const list = this.getUpdateList(alarm, false)\n            this.setState({ list })\n        })\n    };\n\n    renderTable() {\n        return(\n            <table className=\"table mt-4\">\n                <thead>\n                <tr>\n                    <th>Id do Alarme</th>\n                    <th>Status</th>\n                    <th>Urgente</th>\n                    <th>Ações</th>\n                </tr>\n                </thead>\n                <tbody>\n                {this.renderRows()}\n                </tbody>\n            </table>\n        )\n    };\n\n    renderRows() {\n        return this.state.list.map(alarm =>{\n            return(\n                <tr key={alarm.id}>\n                    <td>{alarm.id}</td>\n                    <td>{alarm.name}</td>\n                    <td>{alarm.email}</td>\n                    <td>\n                        <button className=\"btn btn-warning\"\n                                onClick={() => this.load(alarm)}>\n                            <i className=\"fa fa-pencil\"></i>\n                        </button>\n                        <button className=\"btn btn-danger ml-2\"\n                                onClick={() => this.remove(alarm)}>\n                            <i className=\"fa fa-trash\"></i>\n                        </button>\n                    </td>\n                </tr>\n            )\n        })\n    };\n    render () {\n        return (\n            <Main >\n                <div className='display-4'>Gerencimaneto de alarmes</div>\n                {this.renderTable()}\n            </Main>\n        )\n    }\n};"]},"metadata":{},"sourceType":"module"}